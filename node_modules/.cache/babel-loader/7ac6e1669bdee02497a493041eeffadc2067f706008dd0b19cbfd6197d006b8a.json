{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"RegistrarProveedoresComponent\",\n  data() {\n    return {\n      estados: [],\n      municipios: [],\n      estadoSeleccionado: null,\n      municipioSeleccionado: null,\n      items: [],\n      statusSelect: null,\n      avatar_name: \"EA\",\n      proveedor: {\n        RFC: \"\",\n        Contacto: \"\",\n        Razon: \"\",\n        telPrincipal: \"\",\n        telMovil: \"\",\n        Email: \"\",\n        CodigoPostal: \"\",\n        numeroInterior: \"\",\n        numeroExterior: \"\",\n        Calle: \"\",\n        Colonia: \"\"\n      }\n    };\n  },\n  created() {\n    fetch(\"https://localhost:44379/api/documento/Status\").then(function (response) {\n      if (response.ok) {\n        // console.log(response.json());\n        return response.json();\n      }\n    }).then(response => {\n      const resultado = [];\n      for (const item in response.data) {\n        resultado.push({\n          id: response.data[item].id,\n          status: response.data[item].status\n        });\n      }\n      this.items = resultado;\n    }).catch(error => {\n      alert(error);\n      console.log(error);\n      this.error = \" no se pudo procesar la solicitud\";\n    });\n    fetch(\"https://localhost:44379/api/documento/entidad\").then(function (response) {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(response => {\n      const resultado1 = [];\n      for (const estado in response.data) {\n        resultado1.push({\n          id: response.data[estado].id,\n          nombreEntidad: response.data[estado].nombreEntidad\n        });\n      }\n      this.estados = response.data.map(estado => ({\n        id: estado.id,\n        nombreEntidad: estado.nombreEntidad\n      }));\n      console.log(this.estados);\n    }).catch(error => {\n      alert(error);\n      console.log(error);\n      this.error = \" no se pudo procesar la solicitud\";\n    });\n    fetch(\"https://localhost:44379/api/documento/Municipios\").then(function (response) {\n      if (response.ok) {\n        // console.log(response.json());\n        return response.json();\n      }\n    }).then(response => {\n      const resultado2 = [];\n      for (const municipio in response.data) {\n        resultado2.push({\n          id: response.data[municipio].id,\n          nombreMunicipio: response.data[municipio].nombreMunicipio\n        });\n      }\n      this.municipios = resultado2;\n      console.log(this.municipios);\n    }).catch(error => {\n      alert(error);\n      console.log(error);\n      this.error = \" no se pudo procesar la solicitud\";\n    });\n  },\n  methods: {\n    ValidateForm() {\n      this.$.refs.form.setErrors({\n        rfc: [\"El campo rfc es obligatorio\"]\n      });\n    },\n    saveProveedor() {\n      fetch('https://localhost:44379/api/documento/proveedor/registro', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          rfc: this.proveedor.RFC,\n          razon: this.proveedor.Razon,\n          contacto: this.proveedor.Contacto,\n          status: this.proveedor.statusSelect,\n          tel_principal: this.proveedor.telPrincipal,\n          tel_movil: this.proveedor.telMovil,\n          email: this.proveedor.Email,\n          codigo_postal: this.proveedor.CodigoPostal,\n          numero_interior: this.proveedor.numeroInterior,\n          numero_exterior: this.proveedor.numeroExterior,\n          calle: this.proveedor.Calle,\n          colonia: this.proveedor.Colonia\n        })\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      }).then(data => console.log(\"Datos guardados correctamente\")).catch(error => console.error(`Fetch Error: ${error}`));\n    }\n  },\n  components: {\n    ValidationProvider\n  },\n  async mounted() {\n    try {\n      let response = await fetch('https://localhost:44379/api/documento/entidad');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      this.estados = await response.json();\n    } catch (error) {\n      console.log('Hubo un problema con la petición Fetch:' + error.message);\n    }\n    try {\n      let response = await fetch('https://localhost:44379/api/documento/Municipios');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      this.municipios = await response.json();\n    } catch (error) {\n      console.log('Hubo un problema con la petición Fetch:' + error.message);\n    }\n  }\n};","map":{"version":3,"names":["name","data","estados","municipios","estadoSeleccionado","municipioSeleccionado","items","statusSelect","avatar_name","proveedor","RFC","Contacto","Razon","telPrincipal","telMovil","Email","CodigoPostal","numeroInterior","numeroExterior","Calle","Colonia","created","fetch","then","response","ok","json","resultado","item","push","id","status","catch","error","alert","console","log","resultado1","estado","nombreEntidad","map","resultado2","municipio","nombreMunicipio","methods","ValidateForm","$","refs","form","setErrors","rfc","saveProveedor","method","headers","body","JSON","stringify","razon","contacto","tel_principal","tel_movil","email","codigo_postal","numero_interior","numero_exterior","calle","colonia","Error","components","ValidationProvider","mounted","message"],"sources":["src/views/Home.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n  hola a todos!\n  </div>\n</template>\n\n<script>\n\n\nexport default {\n  name: \"RegistrarProveedoresComponent\",\n  data() {\n    return {\n      estados:[],\n      municipios:[],\n      estadoSeleccionado:null,\n      municipioSeleccionado:null,\n      items: [],\n      statusSelect: null,\n      avatar_name: \"EA\",\n      proveedor: {\n        RFC: \"\",\n        Contacto: \"\",\n        Razon: \"\",\n        telPrincipal: \"\",\n        telMovil: \"\",\n        Email: \"\",\n        CodigoPostal: \"\",\n        numeroInterior: \"\",\n        numeroExterior: \"\",\n        Calle: \"\",\n        Colonia: \"\",\n      },\n    };\n  },\n  created() {\n    fetch(\"https://localhost:44379/api/documento/Status\")\n      .then(function (response) {\n        if (response.ok) {\n          // console.log(response.json());\n          return response.json();\n        }\n      })\n      .then((response) => {\n        const resultado = [];\n        for (const item in response.data) {\n          resultado.push({\n            id: response.data[item].id,\n            status: response.data[item].status,\n          });\n        }\n        this.items = resultado;\n      })\n      .catch((error) => {\n        alert(error);\n        console.log(error);\n        this.error = \" no se pudo procesar la solicitud\";\n      });\n      fetch(\"https://localhost:44379/api/documento/entidad\")\n      .then(function (response) {\n        if (response.ok) {\n          \n          return response.json();\n        }\n      })\n      .then((response) => {\n        const resultado1 = [];\n        for (const estado in response.data) {\n          resultado1.push({\n            id: response.data[estado].id,\n            nombreEntidad: response.data[estado].nombreEntidad,\n          });\n        }\n        this.estados = response.data.map(estado =>({id:estado.id,nombreEntidad:estado.nombreEntidad}));\n        console.log(this.estados);\n      })\n      .catch((error) => {\n        alert(error);\n        console.log(error);\n        this.error = \" no se pudo procesar la solicitud\";\n      });\n      fetch(\"https://localhost:44379/api/documento/Municipios\")\n      .then(function (response) {\n        if (response.ok) {\n          // console.log(response.json());\n          return response.json();\n        }\n      })\n      .then((response) => {\n        const resultado2 = [];\n        for (const municipio in response.data) {\n          resultado2.push({\n            id: response.data[municipio].id,\n            nombreMunicipio: response.data[municipio].nombreMunicipio,\n          });\n        }\n        this.municipios = resultado2;\n        console.log(this.municipios);\n      })\n      .catch((error) => {\n        alert(error);\n        console.log(error);\n        this.error = \" no se pudo procesar la solicitud\";\n      });\n      \n  },\n  methods: {\n    ValidateForm() {\n      this.$.refs.form.setErrors({\n        rfc: [\"El campo rfc es obligatorio\"],\n      });\n    },\n    saveProveedor(){\n        fetch('https://localhost:44379/api/documento/proveedor/registro',{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                rfc: this.proveedor.RFC,\n                razon: this.proveedor.Razon,\n                contacto: this.proveedor.Contacto,\n                status: this.proveedor.statusSelect,\n                tel_principal: this.proveedor.telPrincipal,\n                tel_movil: this.proveedor.telMovil,\n                email: this.proveedor.Email,\n                codigo_postal: this.proveedor.CodigoPostal,\n                numero_interior: this.proveedor.numeroInterior,\n                numero_exterior: this.proveedor.numeroExterior,\n                calle: this.proveedor.Calle,\n                colonia:this.proveedor.Colonia\n            \n            })\n        })\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error(\"Network response was not ok\");\n          }\n          return response.json();\n        })\n        .then((data) => console.log(\"Datos guardados correctamente\"))\n        .catch((error) => console.error(`Fetch Error: ${error}`));\n    },\n  },\n  components: {\n    ValidationProvider,\n  },\n  async mounted() {\n    try {\n        let response = await fetch('https://localhost:44379/api/documento/entidad');\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        this.estados = await response.json();\n    } catch (error) {\n        console.log('Hubo un problema con la petición Fetch:' + error.message);\n    }\n\n    try {\n        let response = await fetch('https://localhost:44379/api/documento/Municipios');\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        this.municipios = await response.json();\n    } catch (error) {\n        console.log('Hubo un problema con la petición Fetch:' + error.message);\n    }\n}\n};\n</script>\n<style scoped>\n.gradient-card {\n  background: linear-gradient(to bottom, #ebe5ff, #f3f1ff);\n}\n</style>"],"mappings":";AASA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,UAAA;MACAC,kBAAA;MACAC,qBAAA;MACAC,KAAA;MACAC,YAAA;MACAC,WAAA;MACAC,SAAA;QACAC,GAAA;QACAC,QAAA;QACAC,KAAA;QACAC,YAAA;QACAC,QAAA;QACAC,KAAA;QACAC,YAAA;QACAC,cAAA;QACAC,cAAA;QACAC,KAAA;QACAC,OAAA;MACA;IACA;EACA;EACAC,QAAA;IACAC,KAAA,iDACAC,IAAA,WAAAC,QAAA;MACA,IAAAA,QAAA,CAAAC,EAAA;QACA;QACA,OAAAD,QAAA,CAAAE,IAAA;MACA;IACA,GACAH,IAAA,CAAAC,QAAA;MACA,MAAAG,SAAA;MACA,WAAAC,IAAA,IAAAJ,QAAA,CAAAvB,IAAA;QACA0B,SAAA,CAAAE,IAAA;UACAC,EAAA,EAAAN,QAAA,CAAAvB,IAAA,CAAA2B,IAAA,EAAAE,EAAA;UACAC,MAAA,EAAAP,QAAA,CAAAvB,IAAA,CAAA2B,IAAA,EAAAG;QACA;MACA;MACA,KAAAzB,KAAA,GAAAqB,SAAA;IACA,GACAK,KAAA,CAAAC,KAAA;MACAC,KAAA,CAAAD,KAAA;MACAE,OAAA,CAAAC,GAAA,CAAAH,KAAA;MACA,KAAAA,KAAA;IACA;IACAX,KAAA,kDACAC,IAAA,WAAAC,QAAA;MACA,IAAAA,QAAA,CAAAC,EAAA;QAEA,OAAAD,QAAA,CAAAE,IAAA;MACA;IACA,GACAH,IAAA,CAAAC,QAAA;MACA,MAAAa,UAAA;MACA,WAAAC,MAAA,IAAAd,QAAA,CAAAvB,IAAA;QACAoC,UAAA,CAAAR,IAAA;UACAC,EAAA,EAAAN,QAAA,CAAAvB,IAAA,CAAAqC,MAAA,EAAAR,EAAA;UACAS,aAAA,EAAAf,QAAA,CAAAvB,IAAA,CAAAqC,MAAA,EAAAC;QACA;MACA;MACA,KAAArC,OAAA,GAAAsB,QAAA,CAAAvB,IAAA,CAAAuC,GAAA,CAAAF,MAAA;QAAAR,EAAA,EAAAQ,MAAA,CAAAR,EAAA;QAAAS,aAAA,EAAAD,MAAA,CAAAC;MAAA;MACAJ,OAAA,CAAAC,GAAA,MAAAlC,OAAA;IACA,GACA8B,KAAA,CAAAC,KAAA;MACAC,KAAA,CAAAD,KAAA;MACAE,OAAA,CAAAC,GAAA,CAAAH,KAAA;MACA,KAAAA,KAAA;IACA;IACAX,KAAA,qDACAC,IAAA,WAAAC,QAAA;MACA,IAAAA,QAAA,CAAAC,EAAA;QACA;QACA,OAAAD,QAAA,CAAAE,IAAA;MACA;IACA,GACAH,IAAA,CAAAC,QAAA;MACA,MAAAiB,UAAA;MACA,WAAAC,SAAA,IAAAlB,QAAA,CAAAvB,IAAA;QACAwC,UAAA,CAAAZ,IAAA;UACAC,EAAA,EAAAN,QAAA,CAAAvB,IAAA,CAAAyC,SAAA,EAAAZ,EAAA;UACAa,eAAA,EAAAnB,QAAA,CAAAvB,IAAA,CAAAyC,SAAA,EAAAC;QACA;MACA;MACA,KAAAxC,UAAA,GAAAsC,UAAA;MACAN,OAAA,CAAAC,GAAA,MAAAjC,UAAA;IACA,GACA6B,KAAA,CAAAC,KAAA;MACAC,KAAA,CAAAD,KAAA;MACAE,OAAA,CAAAC,GAAA,CAAAH,KAAA;MACA,KAAAA,KAAA;IACA;EAEA;EACAW,OAAA;IACAC,aAAA;MACA,KAAAC,CAAA,CAAAC,IAAA,CAAAC,IAAA,CAAAC,SAAA;QACAC,GAAA;MACA;IACA;IACAC,cAAA;MACA7B,KAAA;QACA8B,MAAA;QACAC,OAAA;UACA;QACA;QACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA;UACAN,GAAA,OAAAzC,SAAA,CAAAC,GAAA;UACA+C,KAAA,OAAAhD,SAAA,CAAAG,KAAA;UACA8C,QAAA,OAAAjD,SAAA,CAAAE,QAAA;UACAoB,MAAA,OAAAtB,SAAA,CAAAF,YAAA;UACAoD,aAAA,OAAAlD,SAAA,CAAAI,YAAA;UACA+C,SAAA,OAAAnD,SAAA,CAAAK,QAAA;UACA+C,KAAA,OAAApD,SAAA,CAAAM,KAAA;UACA+C,aAAA,OAAArD,SAAA,CAAAO,YAAA;UACA+C,eAAA,OAAAtD,SAAA,CAAAQ,cAAA;UACA+C,eAAA,OAAAvD,SAAA,CAAAS,cAAA;UACA+C,KAAA,OAAAxD,SAAA,CAAAU,KAAA;UACA+C,OAAA,OAAAzD,SAAA,CAAAW;QAEA;MACA,GACAG,IAAA,CAAAC,QAAA;QACA,KAAAA,QAAA,CAAAC,EAAA;UACA,UAAA0C,KAAA;QACA;QACA,OAAA3C,QAAA,CAAAE,IAAA;MACA,GACAH,IAAA,CAAAtB,IAAA,IAAAkC,OAAA,CAAAC,GAAA,mCACAJ,KAAA,CAAAC,KAAA,IAAAE,OAAA,CAAAF,KAAA,iBAAAA,KAAA;IACA;EACA;EACAmC,UAAA;IACAC;EACA;EACA,MAAAC,QAAA;IACA;MACA,IAAA9C,QAAA,SAAAF,KAAA;MACA,KAAAE,QAAA,CAAAC,EAAA;QACA,UAAA0C,KAAA,wBAAA3C,QAAA,CAAAO,MAAA;MACA;MACA,KAAA7B,OAAA,SAAAsB,QAAA,CAAAE,IAAA;IACA,SAAAO,KAAA;MACAE,OAAA,CAAAC,GAAA,6CAAAH,KAAA,CAAAsC,OAAA;IACA;IAEA;MACA,IAAA/C,QAAA,SAAAF,KAAA;MACA,KAAAE,QAAA,CAAAC,EAAA;QACA,UAAA0C,KAAA,wBAAA3C,QAAA,CAAAO,MAAA;MACA;MACA,KAAA5B,UAAA,SAAAqB,QAAA,CAAAE,IAAA;IACA,SAAAO,KAAA;MACAE,OAAA,CAAAC,GAAA,6CAAAH,KAAA,CAAAsC,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}