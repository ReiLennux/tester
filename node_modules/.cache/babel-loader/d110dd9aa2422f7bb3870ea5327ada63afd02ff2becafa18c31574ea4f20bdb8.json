{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport Swal from 'sweetalert2';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    email: \"\",\n    token: null\n  },\n  getters: {},\n  mutations: {\n    login(state, email) {\n      state.email = email;\n      localStorage.setItem('email', email);\n\n      // Muestra la alerta\n      Swal.fire({\n        position: \"top-end\",\n        icon: \"success\",\n        title: \"Sesión iniciada\",\n        showConfirmButton: false,\n        timer: 1500\n      });\n    },\n    logout(state) {\n      state.email = \"\";\n      state.token = null;\n      localStorage.removeItem('email');\n      localStorage.removeItem('token');\n      Swal.fire({\n        position: \"top-end\",\n        icon: \"success\",\n        title: \"Hasta luego\",\n        showConfirmButton: false,\n        timer: 1500\n      });\n    },\n    initializeStore(state) {\n      // Inicializa el estado con el email almacenado en localStorage\n      if (localStorage.getItem('email')) {\n        state.email = localStorage.getItem('email');\n      }\n\n      // Inicializa los encabezados de autorización de Axios si hay un token almacenado\n      const token = localStorage.getItem('token');\n      if (token) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      }\n    }\n  },\n  actions: {\n    async login({\n      commit\n    }, {\n      nombreUsuario,\n      contraseña\n    }) {\n      try {\n        const response = await axios.post('/api/usuarios/login', {\n          nombreUsuario,\n          contraseña\n        });\n        if (response.data.success) {\n          const token = response.data.token;\n\n          // Guarda el token en localStorage\n          localStorage.setItem('token', token);\n\n          // Agrega el token a las solicitudes de Axios como encabezado de autorización\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n          // Llama a la mutación para actualizar el estado con el email y muestra la alerta\n          commit('login', response.data.email);\n        } else {\n          // Muestra una alerta en caso de fallo\n          Swal.fire({\n            position: \"top-end\",\n            icon: \"error\",\n            title: \"Inicio de sesión fallido\",\n            showConfirmButton: false,\n            timer: 1500\n          });\n        }\n      } catch (error) {\n        // Muestra una alerta en caso de error en la solicitud\n        console.error('Error al iniciar sesión:', error);\n        Swal.fire({\n          position: \"top-end\",\n          icon: \"error\",\n          title: \"Error al iniciar sesión\",\n          showConfirmButton: false,\n          timer: 1500\n        });\n      }\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","Swal","use","Store","state","email","token","getters","mutations","login","localStorage","setItem","fire","position","icon","title","showConfirmButton","timer","logout","removeItem","initializeStore","getItem","axios","defaults","headers","common","actions","commit","nombreUsuario","contraseña","response","post","data","success","error","console","modules"],"sources":["/home/lennux/Documentos/UT TICS/APPS/ui/ui/src/store/index.js"],"sourcesContent":["\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nimport Swal from 'sweetalert2'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    email: \"\",\n    token: null\n  },\n  getters: {\n  },\n  mutations: {\n\n    login(state, email) {\n      state.email = email;\n      localStorage.setItem('email', email);\n\n      // Muestra la alerta\n      Swal.fire({\n        position: \"top-end\",\n        icon: \"success\",\n        title: \"Sesión iniciada\",\n        showConfirmButton: false,\n        timer: 1500\n      });\n    },\n    logout(state) {\n      state.email =\"\"\n      state.token=null\n      localStorage.removeItem('email')\n      localStorage.removeItem('token')\n      Swal.fire({\n        position: \"top-end\",\n        icon: \"success\",\n        title: \"Hasta luego\",\n        showConfirmButton: false,\n        timer: 1500\n      });\n    },\n    initializeStore(state) {\n      // Inicializa el estado con el email almacenado en localStorage\n      if (localStorage.getItem('email')) {\n        state.email = localStorage.getItem('email');\n      }\n\n      // Inicializa los encabezados de autorización de Axios si hay un token almacenado\n      const token = localStorage.getItem('token');\n      if (token) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      }}\n  },\n  actions: {\n    async login({ commit }, { nombreUsuario, contraseña }) {\n      try {\n        const response = await axios.post('/api/usuarios/login', { nombreUsuario, contraseña });\n\n        if (response.data.success) {\n          const token = response.data.token;\n\n          // Guarda el token en localStorage\n          localStorage.setItem('token', token);\n\n          // Agrega el token a las solicitudes de Axios como encabezado de autorización\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n          // Llama a la mutación para actualizar el estado con el email y muestra la alerta\n          commit('login', response.data.email);\n        } else {\n          // Muestra una alerta en caso de fallo\n          Swal.fire({\n            position: \"top-end\",\n            icon: \"error\",\n            title: \"Inicio de sesión fallido\",\n            showConfirmButton: false,\n            timer: 1500\n          });\n        }\n      } catch (error) {\n        // Muestra una alerta en caso de error en la solicitud\n        console.error('Error al iniciar sesión:', error);\n        Swal.fire({\n          position: \"top-end\",\n          icon: \"error\",\n          title: \"Error al iniciar sesión\",\n          showConfirmButton: false,\n          timer: 1500\n        });\n      }\n    },\n  },\n  modules: {\n  }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}